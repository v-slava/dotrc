## comment: <esc>
## see: :help expansions

map global normal <c-d> ':quit<ret>'

## space is my leader
map global normal <space> , -docstring 'leader'
map global normal <backspace> <space> -docstring 'remove all sels except main'
map global normal <a-backspace> <a-space> -docstring 'remove main sel'

## map global goto c '<esc>:comment-line<ret>' -docstring 'comment-line'

declare-user-mode my-mode--space-q
map global my-mode--space-q m ':man ' -docstring 'open new man page'
map global user q ':enter-user-mode<space>my-mode--space-q<ret>' -docstring 'quit ...'

declare-user-mode my-mode--space-b
map global my-mode--space-b b ':buffer<space>' -docstring 'buffer'
map global my-mode--space-b n ':buffer-next<ret>' -docstring 'buffer-next'
map global my-mode--space-b p ':buffer-previous<ret>' -docstring 'buffer-previous'
map global user b ':enter-user-mode<space>my-mode--space-b<ret>' -docstring 'buffer ...'

declare-user-mode my-mode--space-c
map global my-mode--space-c l ':echo %sh{
    export location=$kak_buffile:$kak_cursor_line:$kak_cursor_column &&
    echo $location | clipboard.sh -n &&
    echo $location
}<ret>' -docstring 'copy location to clipboard'
map global user c ':enter-user-mode<space>my-mode--space-c<ret>' -docstring 'compile/comments/copy ...'

declare-user-mode my-mode--space-s
map global my-mode--space-s s '/' -docstring 'search'
map global user s ':enter-user-mode<space>my-mode--space-s<ret>' -docstring 'search/symbol ...'

declare-user-mode my-mode--space-p
## run kak inside tmux here:
## map global my-mode--space-p f ':edit %sh{ git ls-files | fzf-tmux.sh -l }<ret>' -docstring 'edit file from git'
map global user p ':enter-user-mode<space>my-mode--space-p<ret>' -docstring 'projects ...'

def -docstring 'invoke vifm to open a file' my-open-file-vifm %{ edit %sh{
    /media/files/workspace/dotrc/other_files/vifm_choose.sh -fs -n
}}

declare-user-mode my-mode--space-f
map global my-mode--space-f , ':my-open-file-vifm<ret>' -docstring 'open file via vifm'
map global my-mode--space-f m ':edit %sh{
    clipboard.sh -o | tr : " "
}<ret>' -docstring 'open file from clipboard'
map global user f ':enter-user-mode<space>my-mode--space-f<ret>' -docstring 'files ...'

def my-git-edit -params 1 -shell-candidates %{ git ls-files } %{ edit %arg{1} }

add-highlighter global number_lines -relative -hlcursor
map -docstring 'case insensitive search' global user '/' /(?i)

## Use system clipboard:
hook global NormalKey y|d|c %{ nop %sh{
    printf %s "$kak_reg_dquote" | clipboard.sh
}}
map global normal P '!clipboard.sh -o<ret>'
map global normal p '<a-!>clipboard.sh -o<ret>'

## Sane line selection behaviour, stolen from issue #1285:
def -params 1 extend-line-down %{
  exec "<a-:>%arg{1}X"
}
def -params 1 extend-line-up %{
  exec "<a-:><a-;>%arg{1}K<a-;>"
  try %{
    exec -draft ';<a-K>\n<ret>'
    exec X
  }
  exec '<a-;><a-X>'
}
map global normal x ':extend-line-down %val{count}<ret>'
map global normal X ':extend-line-up %val{count}<ret>'

## decrement MANWIDTH by 3:
define-command -allow-override -hidden -params 2..3 man-impl %{ %sh{
    buffer_name="$1"
    shift
    manout=$(mktemp "${TMPDIR:-/tmp}"/kak-man-XXXXXX)
    colout=$(mktemp "${TMPDIR:-/tmp}"/kak-man-XXXXXX)
    MANWIDTH=$((kak_window_width - 3)) man "$@" > $manout 2>/dev/null
    retval=$?
    col -b -x > ${colout} < ${manout}
    rm ${manout}
    if [ "${retval}" -eq 0 ]; then
        printf %s\\n "
                edit -scratch '$buffer_name'
                execute-keys '%|cat<space>${colout}<ret>gk'
                nop %sh{rm ${colout}}
                set-option buffer filetype man
                set-option window manpage '$@'
        "
    else
       printf %s\\n "echo -markup %{{Error}man '$@' failed: see *debug* buffer for details}"
       rm ${colout}
    fi
} }

## map global normal <ret> 'e:man %sh{ echo $kak_selection }<ret>'
hook global WinSetOption filetype=man %{
    map global normal <ret> 'e:man %sh{ echo $kak_selection }<ret>'
}

## TODO doesn't work so far:
## hook global WinSetOption filetype=(?!man).* %{
## hook global WinDisplay filetype=(?!man).* %{
## hook global WinDisplay filetype=(?!man) %{
##     unmap global normal <ret>
## }
