# Usage: bc -l THIS_FILE

# Set number of decimal digits after the decimal point:
# scale=20

# Convert hex to dec:
# ibase=16; F1A
# Convert dec to hex:
# obase=16; 17

# Print decimal 7bit ASCII code for 'A':
# printf "%d" \'A
# Syntax \' (or \") is specific for shell printf and it means that the value
# behind it will be used as the code of ISO/IEC 646:1991 (7bit ASCII).

# BASH:
# > echo $[0xffff]
# 65535
# > echo $[2#101010101010]
# 2730
# > echo $[0777]
# 511
# > printf "%#x\n" 65535
# 0xffff
# > printf "%o\n" $[2#101111111]
# 577
# > echo -n 'ABab' | hexdump -C
# 00000000  41 42 61 62                                       |ABab|
# 00000004


# tg(pi / 4) = 1   =>   pi = arctg(1) * 4:
pi=a(1)*4

# Convert degrees to radians:
define rad(degrees) { return degrees * pi / 180; }

# Arbitrary base logarithm:
define log(x, base) { return l(x) / l(base); }
# Decimal logarithm:
define lg(x) { return log(x, 10); }

# Trigonometric functions:
define sin(x) { return s(x); }
define cos(x) { return c(x); }
define tg(x) { return sin(x) / cos(x); }
define ctg(x) { return 1 / tg(x); }

# Inverse trigonometric functions:
define arctan(x) { return a(x); }
define arcsin(x) { return arctan(x / sqrt(1 - x * x)); }
define arccos(x) { return arctan(sqrt(1 - x * x) / x); }
define arccot(x) { return pi / 2 - arctan(x); }

